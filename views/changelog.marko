$ {
    const formatDate = (date, format) => {
        const moment = require('moment');
        return moment(date).format(format);
    };

    const fromNowDate = (date, withoutSuffix) => {
        const moment = require('moment');
        return moment(date).fromNow(withoutSuffix);
    };
}
<include('./layouts/layout.marko', data)>
    <@body>
<main>
        <h1>OpenRCT2 Changelog</h1>
        <p>
            OpenRCT2 constantly adds new <a href="/features">major features</a> to the game. On top of that there are frequent bug fixes. This page is auto-updated with the latest known changes from the <a href="/downloads/develop/latest">latest development build</a>.
        </p>
        <if(typeof(data.lastUpdate) === 'object')>
            <p>Updated <span class="fromNow" data-date="${data.lastUpdate.toISOString()}" data-format="llll">${fromNowDate(data.lastUpdate)}</span>: <span class="date" data-date="${data.lastUpdate.toISOString()}" data-format="llll">${formatDate(data.lastUpdate, 'llll')}</span>.</p>
        </if>
        <for(changeset in data.changelog)>
        <h2>${changeset.versionName}</h2>
        <ul>
            <for(change in changeset.changes)>
                <li>${change}</li>
            </for>
        </ul>
        </for>
</main>
    </@body>
</include>